#include <stdio.h>

int main() {
    int N;
    scanf("%d", &N);  // 读取幻方的大小N（奇数）
    
    int a[40][40] = {0};  // 定义40x40的数组，初始化为0，用于存储幻方
    int hang = 0, lie = N / 2;  // 初始化第一个数字的位置：第0行，中间列
    a[hang][lie] = 1;  // 将第一个数字1放在第一行的中间位置
    
    // 从数字2开始到N*N，依次填充幻方
    for(int K = 2; K <= N * N; K++) {
        // 情况1: 如果上一个数字在第一行但不在最后一列
        if(hang == 0 && lie != N - 1) {
            hang = N - 1;    // 移动到最后一行
            lie = lie + 1;   // 向右移动一列
            a[hang][lie] = K;  // 放置当前数字K
        }
        // 情况2: 如果上一个数字在最后一列但不在第一行
        else if(hang != 0 && lie == N - 1) {
            hang = hang - 1;  // 向上移动一行
            lie = 0;          // 移动到第一列
            a[hang][lie] = K;  // 放置当前数字K
        }
        // 情况3: 如果上一个数字在第一行最后一列（右上角）
        else if(hang == 0 && lie == N - 1) {
            hang = hang + 1;  // 向下移动一行（正下方）
            a[hang][lie] = K;  // 放置当前数字K（列不变）
        }
        // 情况4: 如果上一个数字既不在第一行，也不在最后一列
        else if(hang != 0 && lie != N - 1) {
            // 检查右上方位置是否为空
            if(a[hang - 1][lie + 1] == 0) {
                hang = hang - 1;    // 向上移动一行
                lie = lie + 1;      // 向右移动一列（右上方）
                a[hang][lie] = K;  // 放置当前数字K
            } else {
                hang = hang + 1;    // 向下移动一行（正下方）
                a[hang][lie] = K;  // 放置当前数字K（列不变）
            }
        }
    }
    
    // 输出完整的幻方
    for(int i = 0; i < N; i++) {
        for(int j = 0; j < N; j++) {
            printf("%d", a[i][j]);  // 输出每个数字
            if(j < N - 1) printf(" ");  // 数字间用空格分隔，最后一个数字后不加空格
        }
        printf("\n");  // 每行结束后换行
    }
    
    return 0;
}
--------------------------------------------------------------------------------------------------------------------------
#include <stdio.h>

#define MAX_SIZE 40  // 定义最大尺寸，因为N≤39

int main() {
    int n;
    scanf("%d", &n);  // 读取幻方大小
    
    int magic[MAX_SIZE][MAX_SIZE] = {0};  // 初始化幻方矩阵，全部置0
    int row = 0, col = n / 2;             // 第一个数字的位置：第一行中间
    
    magic[row][col] = 1;  // 放置第一个数字1
    
    // 依次填充数字2到n*n
    for (int num = 2; num <= n * n; num++) {
        // 情况1：在第一行但不在最后一列
        if (row == 0 && col != n - 1) {
            row = n - 1;    // 移到最后一行
            col = col + 1;  // 右移一列
        }
        // 情况2：在最后一列但不在第一行
        else if (col == n - 1 && row != 0) {
            row = row - 1;  // 上移一行
            col = 0;        // 移到第一列
        }
        // 情况3：在第一行最后一列（右上角）
        else if (row == 0 && col == n - 1) {
            row = row + 1;  // 下移一行（正下方）
        }
        // 情况4：既不在第一行，也不在最后一列
        else {
            // 如果右上方位置为空，则移动到右上方
            if (magic[row - 1][col + 1] == 0) {
                row = row - 1;  // 上移一行
                col = col + 1;  // 右移一列
            }
            // 否则移动到正下方
            else {
                row = row + 1;  // 下移一行
            }
        }
        
        magic[row][col] = num;  // 放置当前数字
    }
    
    // 输出幻方
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d", magic[i][j]);
            if (j < n - 1) {
                printf(" ");  // 数字间用空格分隔
            }
        }
        printf("\n");  // 每行结束后换行
    }
    
    return 0;
}
