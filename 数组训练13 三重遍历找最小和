#include <stdio.h>

int main() {
    int s1, s2, s3;  // 定义三个变量，分别存储三个骰子的面数
    
    // 读取用户输入的三个骰子的面数
    scanf("%d %d %d", &s1, &s2, &s3);
    
    // 计算三个骰子可能出现的最大点数之和
    // 最小和是3（每个骰子都掷出1），最大和是s1+s2+s3
    int max_sum = s1 + s2 + s3;
    
    // 创建计数数组，用于统计每个点数之和出现的次数
    // 数组大小为100，确保能够容纳最大可能的和（s1+s2+s3最大为20+20+40=80）
    int count[100] = {0};  // 初始化数组所有元素为0
    
    // 使用三重循环遍历所有可能的骰子组合
    // 第一层循环：遍历第一个骰子的所有可能点数（1到s1）
    for (int i = 1; i <= s1; i++) {
        // 第二层循环：遍历第二个骰子的所有可能点数（1到s2）
        for (int j = 1; j <= s2; j++) {
            // 第三层循环：遍历第三个骰子的所有可能点数（1到s3）
            for (int k = 1; k <= s3; k++) {
                // 计算当前三个骰子的点数之和
                int sum = i + j + k;
                // 在计数数组中对应的位置加1，记录这个和出现的次数
                count[sum]++;
            }
        }
    }
    
    // 初始化变量，用于寻找出现次数最多的和
    int max_count = 0;   // 记录当前找到的最大出现次数
    int result = 3;      // 记录结果，初始化为最小可能的和3
    
    // 遍历所有可能的和（从3到最大和max_sum）
    for (int sum = 3; sum <= max_sum; sum++) {
        // 如果当前和的出现次数大于之前记录的最大出现次数
        if (count[sum] > max_count) {
            // 更新最大出现次数
            max_count = count[sum];
            // 更新结果为当前和
            result = sum;
        }
        // 注意：由于我们从最小的和开始遍历，当出现次数相同时
        // 会自动保留较小的和，满足题目要求
    }
    
    // 输出出现次数最多的最小和
    printf("%d\n", result);
    
    return 0;
}
